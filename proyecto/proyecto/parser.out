Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Unused terminals:

    ZEROS
    SHAPE
    LCORCHER
    IMPORT
    NUMPY
    SIZE
    DOUBLEPOINT
    RCORCHER
    BOOLEAN
    COMA
    OPERADOR
    FROM
    RESHAPE
    AS
    NUMBERS

Grammar

Rule 0     S' -> expression
Rule 1     expression -> ID EQUALS ID POINT ARRAY LPAREN ARREGLO RPAREN

Terminals, with rules where they appear

ARRAY                : 1
ARREGLO              : 1
AS                   : 
BOOLEAN              : 
COMA                 : 
DOUBLEPOINT          : 
EQUALS               : 1
FROM                 : 
ID                   : 1 1
IMPORT               : 
LCORCHER             : 
LPAREN               : 1
NUMBERS              : 
NUMPY                : 
OPERADOR             : 
POINT                : 1
RCORCHER             : 
RESHAPE              : 
RPAREN               : 1
SHAPE                : 
SIZE                 : 
ZEROS                : 
error                : 

Nonterminals, with rules where they appear

expression           : 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . ID EQUALS ID POINT ARRAY LPAREN ARREGLO RPAREN

    ID              shift and go to state 1

    expression                     shift and go to state 2

state 1

    (1) expression -> ID . EQUALS ID POINT ARRAY LPAREN ARREGLO RPAREN

    EQUALS          shift and go to state 3


state 2

    (0) S' -> expression .



state 3

    (1) expression -> ID EQUALS . ID POINT ARRAY LPAREN ARREGLO RPAREN

    ID              shift and go to state 4


state 4

    (1) expression -> ID EQUALS ID . POINT ARRAY LPAREN ARREGLO RPAREN

    POINT           shift and go to state 5


state 5

    (1) expression -> ID EQUALS ID POINT . ARRAY LPAREN ARREGLO RPAREN

    ARRAY           shift and go to state 6


state 6

    (1) expression -> ID EQUALS ID POINT ARRAY . LPAREN ARREGLO RPAREN

    LPAREN          shift and go to state 7


state 7

    (1) expression -> ID EQUALS ID POINT ARRAY LPAREN . ARREGLO RPAREN

    ARREGLO         shift and go to state 8


state 8

    (1) expression -> ID EQUALS ID POINT ARRAY LPAREN ARREGLO . RPAREN

    RPAREN          shift and go to state 9


state 9

    (1) expression -> ID EQUALS ID POINT ARRAY LPAREN ARREGLO RPAREN .

    $end            reduce using rule 1 (expression -> ID EQUALS ID POINT ARRAY LPAREN ARREGLO RPAREN .)


Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> IMPORT NUMPY AS ID
Rule 2     expression -> IMPORT ID FROM ID
Rule 3     expression -> ID EQUALS ID POINT ARRAY LPAREN ARREGLO RPAREN
Rule 4     expression -> ID OPERADOR ID
Rule 5     expression -> ID EQUALS ID OPERADOR ID
Rule 6     expression -> ID EQUALS ID POINT ARRAY LPAREN LCORCHER ARREGLO COMA ARREGLO RCORCHER RPAREN
Rule 7     expression -> ID ARREGLO
Rule 8     expression -> ID ARREGLO ARREGLO
Rule 9     expression -> ID EQUALS ID POINT ZEROS LPAREN NUMBERS RPAREN
Rule 10    expression -> ID EQUALS ID POINT ZEROS LPAREN LPAREN NUMBERS COMA RPAREN RPAREN
Rule 11    expression -> ID EQUALS ID POINT ZEROS LPAREN LPAREN NUMBERS COMA NUMBERS RPAREN RPAREN
Rule 12    expression -> ID POINT ZEROS LPAREN NUMBERS RPAREN
Rule 13    expression -> ID POINT ZEROS LPAREN LPAREN NUMBERS COMA RPAREN RPAREN
Rule 14    expression -> ID POINT ZEROS LPAREN LPAREN NUMBERS COMA NUMBERS RPAREN RPAREN
Rule 15    expression -> ID EQUALS ID BOOLEAN ID
Rule 16    expression -> ID BOOLEAN ID
Rule 17    expression -> ID POINT SHAPE
Rule 18    expression -> ID POINT SIZE
Rule 19    expression -> ID POINT RESHAPE LPAREN NUMBERS COMA NUMBERS RPAREN
Rule 20    expression -> ID LCORCHER NUMBERS DOUBLEPOINT RCORCHER
Rule 21    expression -> ID LCORCHER NUMBERS DOUBLEPOINT NUMBERS RCORCHER
Rule 22    expression -> ID LCORCHER NUMBERS DOUBLEPOINT NUMBERS DOUBLEPOINT RCORCHER
Rule 23    expression -> ID LCORCHER NUMBERS DOUBLEPOINT NUMBERS DOUBLEPOINT NUMBERS RCORCHER
Rule 24    empty -> <empty>

Terminals, with rules where they appear

ARRAY                : 3 6
ARREGLO              : 3 6 6 7 8 8
AS                   : 1
BOOLEAN              : 15 16
COMA                 : 6 10 11 13 14 19
DOUBLEPOINT          : 20 21 22 22 23 23
EQUALS               : 3 5 6 9 10 11 15
FROM                 : 2
ID                   : 1 2 2 3 3 4 4 5 5 5 6 6 7 8 9 9 10 10 11 11 12 13 14 15 15 15 16 16 17 18 19 20 21 22 23
IMPORT               : 1 2
LCORCHER             : 6 20 21 22 23
LPAREN               : 3 6 9 10 10 11 11 12 13 13 14 14 19
NUMBERS              : 9 10 11 11 12 13 14 14 19 19 20 21 21 22 22 23 23 23
NUMPY                : 1
OPERADOR             : 4 5
POINT                : 3 6 9 10 11 12 13 14 17 18 19
RCORCHER             : 6 20 21 22 23
RESHAPE              : 19
RPAREN               : 3 6 9 10 10 11 11 12 13 13 14 14 19
SHAPE                : 17
SIZE                 : 18
ZEROS                : 9 10 11 12 13 14
error                : 

Nonterminals, with rules where they appear

empty                : 
expression           : 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . IMPORT NUMPY AS ID
    (2) expression -> . IMPORT ID FROM ID
    (3) expression -> . ID EQUALS ID POINT ARRAY LPAREN ARREGLO RPAREN
    (4) expression -> . ID OPERADOR ID
    (5) expression -> . ID EQUALS ID OPERADOR ID
    (6) expression -> . ID EQUALS ID POINT ARRAY LPAREN LCORCHER ARREGLO COMA ARREGLO RCORCHER RPAREN
    (7) expression -> . ID ARREGLO
    (8) expression -> . ID ARREGLO ARREGLO
    (9) expression -> . ID EQUALS ID POINT ZEROS LPAREN NUMBERS RPAREN
    (10) expression -> . ID EQUALS ID POINT ZEROS LPAREN LPAREN NUMBERS COMA RPAREN RPAREN
    (11) expression -> . ID EQUALS ID POINT ZEROS LPAREN LPAREN NUMBERS COMA NUMBERS RPAREN RPAREN
    (12) expression -> . ID POINT ZEROS LPAREN NUMBERS RPAREN
    (13) expression -> . ID POINT ZEROS LPAREN LPAREN NUMBERS COMA RPAREN RPAREN
    (14) expression -> . ID POINT ZEROS LPAREN LPAREN NUMBERS COMA NUMBERS RPAREN RPAREN
    (15) expression -> . ID EQUALS ID BOOLEAN ID
    (16) expression -> . ID BOOLEAN ID
    (17) expression -> . ID POINT SHAPE
    (18) expression -> . ID POINT SIZE
    (19) expression -> . ID POINT RESHAPE LPAREN NUMBERS COMA NUMBERS RPAREN
    (20) expression -> . ID LCORCHER NUMBERS DOUBLEPOINT RCORCHER
    (21) expression -> . ID LCORCHER NUMBERS DOUBLEPOINT NUMBERS RCORCHER
    (22) expression -> . ID LCORCHER NUMBERS DOUBLEPOINT NUMBERS DOUBLEPOINT RCORCHER
    (23) expression -> . ID LCORCHER NUMBERS DOUBLEPOINT NUMBERS DOUBLEPOINT NUMBERS RCORCHER

    IMPORT          shift and go to state 2
    ID              shift and go to state 3

    expression                     shift and go to state 1

state 1

    (0) S' -> expression .



state 2

    (1) expression -> IMPORT . NUMPY AS ID
    (2) expression -> IMPORT . ID FROM ID

    NUMPY           shift and go to state 5
    ID              shift and go to state 4


state 3

    (3) expression -> ID . EQUALS ID POINT ARRAY LPAREN ARREGLO RPAREN
    (4) expression -> ID . OPERADOR ID
    (5) expression -> ID . EQUALS ID OPERADOR ID
    (6) expression -> ID . EQUALS ID POINT ARRAY LPAREN LCORCHER ARREGLO COMA ARREGLO RCORCHER RPAREN
    (7) expression -> ID . ARREGLO
    (8) expression -> ID . ARREGLO ARREGLO
    (9) expression -> ID . EQUALS ID POINT ZEROS LPAREN NUMBERS RPAREN
    (10) expression -> ID . EQUALS ID POINT ZEROS LPAREN LPAREN NUMBERS COMA RPAREN RPAREN
    (11) expression -> ID . EQUALS ID POINT ZEROS LPAREN LPAREN NUMBERS COMA NUMBERS RPAREN RPAREN
    (12) expression -> ID . POINT ZEROS LPAREN NUMBERS RPAREN
    (13) expression -> ID . POINT ZEROS LPAREN LPAREN NUMBERS COMA RPAREN RPAREN
    (14) expression -> ID . POINT ZEROS LPAREN LPAREN NUMBERS COMA NUMBERS RPAREN RPAREN
    (15) expression -> ID . EQUALS ID BOOLEAN ID
    (16) expression -> ID . BOOLEAN ID
    (17) expression -> ID . POINT SHAPE
    (18) expression -> ID . POINT SIZE
    (19) expression -> ID . POINT RESHAPE LPAREN NUMBERS COMA NUMBERS RPAREN
    (20) expression -> ID . LCORCHER NUMBERS DOUBLEPOINT RCORCHER
    (21) expression -> ID . LCORCHER NUMBERS DOUBLEPOINT NUMBERS RCORCHER
    (22) expression -> ID . LCORCHER NUMBERS DOUBLEPOINT NUMBERS DOUBLEPOINT RCORCHER
    (23) expression -> ID . LCORCHER NUMBERS DOUBLEPOINT NUMBERS DOUBLEPOINT NUMBERS RCORCHER

    EQUALS          shift and go to state 7
    OPERADOR        shift and go to state 10
    ARREGLO         shift and go to state 8
    POINT           shift and go to state 11
    BOOLEAN         shift and go to state 6
    LCORCHER        shift and go to state 9


state 4

    (2) expression -> IMPORT ID . FROM ID

    FROM            shift and go to state 12


state 5

    (1) expression -> IMPORT NUMPY . AS ID

    AS              shift and go to state 13


state 6

    (16) expression -> ID BOOLEAN . ID

    ID              shift and go to state 14


state 7

    (3) expression -> ID EQUALS . ID POINT ARRAY LPAREN ARREGLO RPAREN
    (5) expression -> ID EQUALS . ID OPERADOR ID
    (6) expression -> ID EQUALS . ID POINT ARRAY LPAREN LCORCHER ARREGLO COMA ARREGLO RCORCHER RPAREN
    (9) expression -> ID EQUALS . ID POINT ZEROS LPAREN NUMBERS RPAREN
    (10) expression -> ID EQUALS . ID POINT ZEROS LPAREN LPAREN NUMBERS COMA RPAREN RPAREN
    (11) expression -> ID EQUALS . ID POINT ZEROS LPAREN LPAREN NUMBERS COMA NUMBERS RPAREN RPAREN
    (15) expression -> ID EQUALS . ID BOOLEAN ID

    ID              shift and go to state 15


state 8

    (7) expression -> ID ARREGLO .
    (8) expression -> ID ARREGLO . ARREGLO

    $end            reduce using rule 7 (expression -> ID ARREGLO .)
    ARREGLO         shift and go to state 16


state 9

    (20) expression -> ID LCORCHER . NUMBERS DOUBLEPOINT RCORCHER
    (21) expression -> ID LCORCHER . NUMBERS DOUBLEPOINT NUMBERS RCORCHER
    (22) expression -> ID LCORCHER . NUMBERS DOUBLEPOINT NUMBERS DOUBLEPOINT RCORCHER
    (23) expression -> ID LCORCHER . NUMBERS DOUBLEPOINT NUMBERS DOUBLEPOINT NUMBERS RCORCHER

    NUMBERS         shift and go to state 17


state 10

    (4) expression -> ID OPERADOR . ID

    ID              shift and go to state 18


state 11

    (12) expression -> ID POINT . ZEROS LPAREN NUMBERS RPAREN
    (13) expression -> ID POINT . ZEROS LPAREN LPAREN NUMBERS COMA RPAREN RPAREN
    (14) expression -> ID POINT . ZEROS LPAREN LPAREN NUMBERS COMA NUMBERS RPAREN RPAREN
    (17) expression -> ID POINT . SHAPE
    (18) expression -> ID POINT . SIZE
    (19) expression -> ID POINT . RESHAPE LPAREN NUMBERS COMA NUMBERS RPAREN

    ZEROS           shift and go to state 22
    SHAPE           shift and go to state 19
    SIZE            shift and go to state 21
    RESHAPE         shift and go to state 20


state 12

    (2) expression -> IMPORT ID FROM . ID

    ID              shift and go to state 23


state 13

    (1) expression -> IMPORT NUMPY AS . ID

    ID              shift and go to state 24


state 14

    (16) expression -> ID BOOLEAN ID .

    $end            reduce using rule 16 (expression -> ID BOOLEAN ID .)


state 15

    (3) expression -> ID EQUALS ID . POINT ARRAY LPAREN ARREGLO RPAREN
    (5) expression -> ID EQUALS ID . OPERADOR ID
    (6) expression -> ID EQUALS ID . POINT ARRAY LPAREN LCORCHER ARREGLO COMA ARREGLO RCORCHER RPAREN
    (9) expression -> ID EQUALS ID . POINT ZEROS LPAREN NUMBERS RPAREN
    (10) expression -> ID EQUALS ID . POINT ZEROS LPAREN LPAREN NUMBERS COMA RPAREN RPAREN
    (11) expression -> ID EQUALS ID . POINT ZEROS LPAREN LPAREN NUMBERS COMA NUMBERS RPAREN RPAREN
    (15) expression -> ID EQUALS ID . BOOLEAN ID

    POINT           shift and go to state 27
    OPERADOR        shift and go to state 26
    BOOLEAN         shift and go to state 25


state 16

    (8) expression -> ID ARREGLO ARREGLO .

    $end            reduce using rule 8 (expression -> ID ARREGLO ARREGLO .)


state 17

    (20) expression -> ID LCORCHER NUMBERS . DOUBLEPOINT RCORCHER
    (21) expression -> ID LCORCHER NUMBERS . DOUBLEPOINT NUMBERS RCORCHER
    (22) expression -> ID LCORCHER NUMBERS . DOUBLEPOINT NUMBERS DOUBLEPOINT RCORCHER
    (23) expression -> ID LCORCHER NUMBERS . DOUBLEPOINT NUMBERS DOUBLEPOINT NUMBERS RCORCHER

    DOUBLEPOINT     shift and go to state 28


state 18

    (4) expression -> ID OPERADOR ID .

    $end            reduce using rule 4 (expression -> ID OPERADOR ID .)


state 19

    (17) expression -> ID POINT SHAPE .

    $end            reduce using rule 17 (expression -> ID POINT SHAPE .)


state 20

    (19) expression -> ID POINT RESHAPE . LPAREN NUMBERS COMA NUMBERS RPAREN

    LPAREN          shift and go to state 29


state 21

    (18) expression -> ID POINT SIZE .

    $end            reduce using rule 18 (expression -> ID POINT SIZE .)


state 22

    (12) expression -> ID POINT ZEROS . LPAREN NUMBERS RPAREN
    (13) expression -> ID POINT ZEROS . LPAREN LPAREN NUMBERS COMA RPAREN RPAREN
    (14) expression -> ID POINT ZEROS . LPAREN LPAREN NUMBERS COMA NUMBERS RPAREN RPAREN

    LPAREN          shift and go to state 30


state 23

    (2) expression -> IMPORT ID FROM ID .

    $end            reduce using rule 2 (expression -> IMPORT ID FROM ID .)


state 24

    (1) expression -> IMPORT NUMPY AS ID .

    $end            reduce using rule 1 (expression -> IMPORT NUMPY AS ID .)


state 25

    (15) expression -> ID EQUALS ID BOOLEAN . ID

    ID              shift and go to state 31


state 26

    (5) expression -> ID EQUALS ID OPERADOR . ID

    ID              shift and go to state 32


state 27

    (3) expression -> ID EQUALS ID POINT . ARRAY LPAREN ARREGLO RPAREN
    (6) expression -> ID EQUALS ID POINT . ARRAY LPAREN LCORCHER ARREGLO COMA ARREGLO RCORCHER RPAREN
    (9) expression -> ID EQUALS ID POINT . ZEROS LPAREN NUMBERS RPAREN
    (10) expression -> ID EQUALS ID POINT . ZEROS LPAREN LPAREN NUMBERS COMA RPAREN RPAREN
    (11) expression -> ID EQUALS ID POINT . ZEROS LPAREN LPAREN NUMBERS COMA NUMBERS RPAREN RPAREN

    ARRAY           shift and go to state 33
    ZEROS           shift and go to state 34


state 28

    (20) expression -> ID LCORCHER NUMBERS DOUBLEPOINT . RCORCHER
    (21) expression -> ID LCORCHER NUMBERS DOUBLEPOINT . NUMBERS RCORCHER
    (22) expression -> ID LCORCHER NUMBERS DOUBLEPOINT . NUMBERS DOUBLEPOINT RCORCHER
    (23) expression -> ID LCORCHER NUMBERS DOUBLEPOINT . NUMBERS DOUBLEPOINT NUMBERS RCORCHER

    RCORCHER        shift and go to state 36
    NUMBERS         shift and go to state 35


state 29

    (19) expression -> ID POINT RESHAPE LPAREN . NUMBERS COMA NUMBERS RPAREN

    NUMBERS         shift and go to state 37


state 30

    (12) expression -> ID POINT ZEROS LPAREN . NUMBERS RPAREN
    (13) expression -> ID POINT ZEROS LPAREN . LPAREN NUMBERS COMA RPAREN RPAREN
    (14) expression -> ID POINT ZEROS LPAREN . LPAREN NUMBERS COMA NUMBERS RPAREN RPAREN

    NUMBERS         shift and go to state 39
    LPAREN          shift and go to state 38


state 31

    (15) expression -> ID EQUALS ID BOOLEAN ID .

    $end            reduce using rule 15 (expression -> ID EQUALS ID BOOLEAN ID .)


state 32

    (5) expression -> ID EQUALS ID OPERADOR ID .

    $end            reduce using rule 5 (expression -> ID EQUALS ID OPERADOR ID .)


state 33

    (3) expression -> ID EQUALS ID POINT ARRAY . LPAREN ARREGLO RPAREN
    (6) expression -> ID EQUALS ID POINT ARRAY . LPAREN LCORCHER ARREGLO COMA ARREGLO RCORCHER RPAREN

    LPAREN          shift and go to state 40


state 34

    (9) expression -> ID EQUALS ID POINT ZEROS . LPAREN NUMBERS RPAREN
    (10) expression -> ID EQUALS ID POINT ZEROS . LPAREN LPAREN NUMBERS COMA RPAREN RPAREN
    (11) expression -> ID EQUALS ID POINT ZEROS . LPAREN LPAREN NUMBERS COMA NUMBERS RPAREN RPAREN

    LPAREN          shift and go to state 41


state 35

    (21) expression -> ID LCORCHER NUMBERS DOUBLEPOINT NUMBERS . RCORCHER
    (22) expression -> ID LCORCHER NUMBERS DOUBLEPOINT NUMBERS . DOUBLEPOINT RCORCHER
    (23) expression -> ID LCORCHER NUMBERS DOUBLEPOINT NUMBERS . DOUBLEPOINT NUMBERS RCORCHER

    RCORCHER        shift and go to state 42
    DOUBLEPOINT     shift and go to state 43


state 36

    (20) expression -> ID LCORCHER NUMBERS DOUBLEPOINT RCORCHER .

    $end            reduce using rule 20 (expression -> ID LCORCHER NUMBERS DOUBLEPOINT RCORCHER .)


state 37

    (19) expression -> ID POINT RESHAPE LPAREN NUMBERS . COMA NUMBERS RPAREN

    COMA            shift and go to state 44


state 38

    (13) expression -> ID POINT ZEROS LPAREN LPAREN . NUMBERS COMA RPAREN RPAREN
    (14) expression -> ID POINT ZEROS LPAREN LPAREN . NUMBERS COMA NUMBERS RPAREN RPAREN

    NUMBERS         shift and go to state 45


state 39

    (12) expression -> ID POINT ZEROS LPAREN NUMBERS . RPAREN

    RPAREN          shift and go to state 46


state 40

    (3) expression -> ID EQUALS ID POINT ARRAY LPAREN . ARREGLO RPAREN
    (6) expression -> ID EQUALS ID POINT ARRAY LPAREN . LCORCHER ARREGLO COMA ARREGLO RCORCHER RPAREN

    ARREGLO         shift and go to state 47
    LCORCHER        shift and go to state 48


state 41

    (9) expression -> ID EQUALS ID POINT ZEROS LPAREN . NUMBERS RPAREN
    (10) expression -> ID EQUALS ID POINT ZEROS LPAREN . LPAREN NUMBERS COMA RPAREN RPAREN
    (11) expression -> ID EQUALS ID POINT ZEROS LPAREN . LPAREN NUMBERS COMA NUMBERS RPAREN RPAREN

    NUMBERS         shift and go to state 49
    LPAREN          shift and go to state 50


state 42

    (21) expression -> ID LCORCHER NUMBERS DOUBLEPOINT NUMBERS RCORCHER .

    $end            reduce using rule 21 (expression -> ID LCORCHER NUMBERS DOUBLEPOINT NUMBERS RCORCHER .)


state 43

    (22) expression -> ID LCORCHER NUMBERS DOUBLEPOINT NUMBERS DOUBLEPOINT . RCORCHER
    (23) expression -> ID LCORCHER NUMBERS DOUBLEPOINT NUMBERS DOUBLEPOINT . NUMBERS RCORCHER

    RCORCHER        shift and go to state 52
    NUMBERS         shift and go to state 51


state 44

    (19) expression -> ID POINT RESHAPE LPAREN NUMBERS COMA . NUMBERS RPAREN

    NUMBERS         shift and go to state 53


state 45

    (13) expression -> ID POINT ZEROS LPAREN LPAREN NUMBERS . COMA RPAREN RPAREN
    (14) expression -> ID POINT ZEROS LPAREN LPAREN NUMBERS . COMA NUMBERS RPAREN RPAREN

    COMA            shift and go to state 54


state 46

    (12) expression -> ID POINT ZEROS LPAREN NUMBERS RPAREN .

    $end            reduce using rule 12 (expression -> ID POINT ZEROS LPAREN NUMBERS RPAREN .)


state 47

    (3) expression -> ID EQUALS ID POINT ARRAY LPAREN ARREGLO . RPAREN

    RPAREN          shift and go to state 55


state 48

    (6) expression -> ID EQUALS ID POINT ARRAY LPAREN LCORCHER . ARREGLO COMA ARREGLO RCORCHER RPAREN

    ARREGLO         shift and go to state 56


state 49

    (9) expression -> ID EQUALS ID POINT ZEROS LPAREN NUMBERS . RPAREN

    RPAREN          shift and go to state 57


state 50

    (10) expression -> ID EQUALS ID POINT ZEROS LPAREN LPAREN . NUMBERS COMA RPAREN RPAREN
    (11) expression -> ID EQUALS ID POINT ZEROS LPAREN LPAREN . NUMBERS COMA NUMBERS RPAREN RPAREN

    NUMBERS         shift and go to state 58


state 51

    (23) expression -> ID LCORCHER NUMBERS DOUBLEPOINT NUMBERS DOUBLEPOINT NUMBERS . RCORCHER

    RCORCHER        shift and go to state 59


state 52

    (22) expression -> ID LCORCHER NUMBERS DOUBLEPOINT NUMBERS DOUBLEPOINT RCORCHER .

    $end            reduce using rule 22 (expression -> ID LCORCHER NUMBERS DOUBLEPOINT NUMBERS DOUBLEPOINT RCORCHER .)


state 53

    (19) expression -> ID POINT RESHAPE LPAREN NUMBERS COMA NUMBERS . RPAREN

    RPAREN          shift and go to state 60


state 54

    (13) expression -> ID POINT ZEROS LPAREN LPAREN NUMBERS COMA . RPAREN RPAREN
    (14) expression -> ID POINT ZEROS LPAREN LPAREN NUMBERS COMA . NUMBERS RPAREN RPAREN

    RPAREN          shift and go to state 61
    NUMBERS         shift and go to state 62


state 55

    (3) expression -> ID EQUALS ID POINT ARRAY LPAREN ARREGLO RPAREN .

    $end            reduce using rule 3 (expression -> ID EQUALS ID POINT ARRAY LPAREN ARREGLO RPAREN .)


state 56

    (6) expression -> ID EQUALS ID POINT ARRAY LPAREN LCORCHER ARREGLO . COMA ARREGLO RCORCHER RPAREN

    COMA            shift and go to state 63


state 57

    (9) expression -> ID EQUALS ID POINT ZEROS LPAREN NUMBERS RPAREN .

    $end            reduce using rule 9 (expression -> ID EQUALS ID POINT ZEROS LPAREN NUMBERS RPAREN .)


state 58

    (10) expression -> ID EQUALS ID POINT ZEROS LPAREN LPAREN NUMBERS . COMA RPAREN RPAREN
    (11) expression -> ID EQUALS ID POINT ZEROS LPAREN LPAREN NUMBERS . COMA NUMBERS RPAREN RPAREN

    COMA            shift and go to state 64


state 59

    (23) expression -> ID LCORCHER NUMBERS DOUBLEPOINT NUMBERS DOUBLEPOINT NUMBERS RCORCHER .

    $end            reduce using rule 23 (expression -> ID LCORCHER NUMBERS DOUBLEPOINT NUMBERS DOUBLEPOINT NUMBERS RCORCHER .)


state 60

    (19) expression -> ID POINT RESHAPE LPAREN NUMBERS COMA NUMBERS RPAREN .

    $end            reduce using rule 19 (expression -> ID POINT RESHAPE LPAREN NUMBERS COMA NUMBERS RPAREN .)


state 61

    (13) expression -> ID POINT ZEROS LPAREN LPAREN NUMBERS COMA RPAREN . RPAREN

    RPAREN          shift and go to state 65


state 62

    (14) expression -> ID POINT ZEROS LPAREN LPAREN NUMBERS COMA NUMBERS . RPAREN RPAREN

    RPAREN          shift and go to state 66


state 63

    (6) expression -> ID EQUALS ID POINT ARRAY LPAREN LCORCHER ARREGLO COMA . ARREGLO RCORCHER RPAREN

    ARREGLO         shift and go to state 67


state 64

    (10) expression -> ID EQUALS ID POINT ZEROS LPAREN LPAREN NUMBERS COMA . RPAREN RPAREN
    (11) expression -> ID EQUALS ID POINT ZEROS LPAREN LPAREN NUMBERS COMA . NUMBERS RPAREN RPAREN

    RPAREN          shift and go to state 68
    NUMBERS         shift and go to state 69


state 65

    (13) expression -> ID POINT ZEROS LPAREN LPAREN NUMBERS COMA RPAREN RPAREN .

    $end            reduce using rule 13 (expression -> ID POINT ZEROS LPAREN LPAREN NUMBERS COMA RPAREN RPAREN .)


state 66

    (14) expression -> ID POINT ZEROS LPAREN LPAREN NUMBERS COMA NUMBERS RPAREN . RPAREN

    RPAREN          shift and go to state 70


state 67

    (6) expression -> ID EQUALS ID POINT ARRAY LPAREN LCORCHER ARREGLO COMA ARREGLO . RCORCHER RPAREN

    RCORCHER        shift and go to state 71


state 68

    (10) expression -> ID EQUALS ID POINT ZEROS LPAREN LPAREN NUMBERS COMA RPAREN . RPAREN

    RPAREN          shift and go to state 72


state 69

    (11) expression -> ID EQUALS ID POINT ZEROS LPAREN LPAREN NUMBERS COMA NUMBERS . RPAREN RPAREN

    RPAREN          shift and go to state 73


state 70

    (14) expression -> ID POINT ZEROS LPAREN LPAREN NUMBERS COMA NUMBERS RPAREN RPAREN .

    $end            reduce using rule 14 (expression -> ID POINT ZEROS LPAREN LPAREN NUMBERS COMA NUMBERS RPAREN RPAREN .)


state 71

    (6) expression -> ID EQUALS ID POINT ARRAY LPAREN LCORCHER ARREGLO COMA ARREGLO RCORCHER . RPAREN

    RPAREN          shift and go to state 74


state 72

    (10) expression -> ID EQUALS ID POINT ZEROS LPAREN LPAREN NUMBERS COMA RPAREN RPAREN .

    $end            reduce using rule 10 (expression -> ID EQUALS ID POINT ZEROS LPAREN LPAREN NUMBERS COMA RPAREN RPAREN .)


state 73

    (11) expression -> ID EQUALS ID POINT ZEROS LPAREN LPAREN NUMBERS COMA NUMBERS RPAREN . RPAREN

    RPAREN          shift and go to state 75


state 74

    (6) expression -> ID EQUALS ID POINT ARRAY LPAREN LCORCHER ARREGLO COMA ARREGLO RCORCHER RPAREN .

    $end            reduce using rule 6 (expression -> ID EQUALS ID POINT ARRAY LPAREN LCORCHER ARREGLO COMA ARREGLO RCORCHER RPAREN .)


state 75

    (11) expression -> ID EQUALS ID POINT ZEROS LPAREN LPAREN NUMBERS COMA NUMBERS RPAREN RPAREN .

    $end            reduce using rule 11 (expression -> ID EQUALS ID POINT ZEROS LPAREN LPAREN NUMBERS COMA NUMBERS RPAREN RPAREN .)

